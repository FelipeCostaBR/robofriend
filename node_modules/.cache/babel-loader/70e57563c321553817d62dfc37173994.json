{"ast":null,"code":"var _jsxFileName = \"/Users/felipePC/Desktop/robofriend/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport { setSearchField } from '../actions';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchRobots.searchfield\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value))\n  };\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onSearchChange = event => {\n      this.setState({\n        searchfield: event.target.value\n      });\n    };\n\n    this.state = {\n      robots: [],\n      searchfield: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      robots: users\n    }));\n  }\n\n  render() {\n    const {\n      robots,\n      searchfield\n    } = this.state;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n    });\n    return !robots.length ? /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 14\n      }\n    }, \"Loading\") : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    }, \"RoboFriends\"), /*#__PURE__*/React.createElement(SearchBox, {\n      searchChange: this.onSearchChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Scroll, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ErrorBoundry, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CardList, {\n      robots: filteredRobots,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    }))));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/felipePC/Desktop/robofriend/src/containers/App.js"],"names":["React","Component","CardList","SearchBox","Scroll","ErrorBoundry","setSearchField","connect","mapStateToProps","state","searchField","searchRobots","searchfield","mapDispatchToProps","dispatch","onSearchChange","event","target","value","App","constructor","setState","robots","componentDidMount","fetch","then","response","json","users","render","filteredRobots","filter","robot","name","toLowerCase","includes","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACE,YAAN,CAAmBC;AAD7B,GAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACtC,SAAO;AACHC,IAAAA,cAAc,EAAGC,KAAD,IAAWF,QAAQ,CAACR,cAAc,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AADhC,GAAP;AAGF,CAJD;;AAMA,MAAMC,GAAN,SAAkBlB,SAAlB,CAA4B;AACxBmB,EAAAA,WAAW,GAAE;AACT;;AADS,SAebL,cAfa,GAeKC,KAAD,IAAW;AACxB,WAAKK,QAAL,CAAc;AAAET,QAAAA,WAAW,EAAEI,KAAK,CAACC,MAAN,CAAaC;AAA5B,OAAd;AACH,KAjBY;;AAET,SAAKT,KAAL,GAAa;AACTa,MAAAA,MAAM,EAAE,EADC;AAETV,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAIH;;AAEDW,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAKA,QAAQ,CAACC,IAAT,EADvB,EAEKF,IAFL,CAEUG,KAAK,IAAI,KAAKP,QAAL,CAAc;AAAEC,MAAAA,MAAM,EAAEM;AAAV,KAAd,CAFnB;AAGC;;AAOLC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACP,MAAAA,MAAD;AAASV,MAAAA;AAAT,QAAwB,KAAKH,KAAnC;AACA,UAAMqB,cAAc,GAAGR,MAAM,CAACS,MAAP,CAAcC,KAAK,IAAI;AAC1C,aAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCvB,WAAW,CAACsB,WAAZ,EAAlC,CAAP;AACH,KAFsB,CAAvB;AAGA,WAAO,CAACZ,MAAM,CAACc,MAAR,gBACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADE,gBAGK;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAE,KAAKrB,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAEe,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADA,CAHJ,CAHZ;AAaE;;AAtCkB;;AAyC5B,eAAevB,OAAO,CAACC,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CM,GAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll'\nimport ErrorBoundry from '../components/ErrorBoundry'\nimport { setSearchField } from '../actions'\nimport { connect } from 'react-redux'\n\nconst mapStateToProps = state => {\n    return {\n        searchField: state.searchRobots.searchfield\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n   return {\n       onSearchChange: (event) => dispatch(setSearchField(event.target.value))\n   }\n}\n\nclass App extends Component {\n    constructor(){\n        super()\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response =>  response.json())\n            .then(users => this.setState({ robots: users}));\n        }\n\n\n    onSearchChange = (event) => {\n        this.setState({ searchfield: event.target.value })\n    }\n\n    render() {\n        const {robots, searchfield} = this.state;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        })\n        return !robots.length ?\n             <h1>Loading</h1> :\n        (\n                    <div className='tc'>\n                        <h1>RoboFriends</h1>\n                        <SearchBox searchChange={this.onSearchChange} />\n                        <Scroll>\n                        <ErrorBoundry>\n                            <CardList robots={filteredRobots}/>\n                        </ErrorBoundry>\n                        </Scroll>\n                    </div>\n                )\n         }\n   } \n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}